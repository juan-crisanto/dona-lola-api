package com.donalola.orders.infraestructure.dao.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.donalola.FoodMenuID;
import com.donalola.ItemMenuID;
import com.donalola.commons.dynamodb.util.DynamoDBConverter;
import lombok.*;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

@NoArgsConstructor
@AllArgsConstructor
@Data
@DynamoDBTable(tableName = "ORDER")
public class OrderDynamoEntity implements Serializable {

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute(attributeName = "customerId")
    private String customerId;

    @DynamoDBTypeConverted(converter = DynamoDBConverter.LocalDateTimeConverter.class)
    @DynamoDBAttribute(attributeName = "createdDatetime")
    private LocalDateTime createdDatetime;

    @DynamoDBTypeConverted(converter = DynamoDBConverter.LocalDateTimeConverter.class)
    @DynamoDBAttribute(attributeName = "modifiedDateTime")
    private LocalDateTime modifiedDatetime;

    @DynamoDBAttribute(attributeName = "customerName")
    private String customerName;

    @DynamoDBAttribute(attributeName = "foodPlaceId")
    private String foodPlaceId;

    @DynamoDBTypeConverted(converter = DynamoDBConverter.BigDecimalConverter.class)
    @DynamoDBAttribute(attributeName = "totalPrice")
    private BigDecimal totalPrice;

    @DynamoDBAttribute(attributeName = "comment")
    private String comment;

    @DynamoDBAttribute(attributeName = "paymentMethod")
    private String paymentMethod;

    @DynamoDBAttribute(attributeName = "items")
    private List<ItemEntity> items;


    @NoArgsConstructor
    @AllArgsConstructor
    @Getter
    @Setter
    @DynamoDBDocument
    public static class ItemEntity implements Serializable {

        @DynamoDBAttribute(attributeName = "name")
        private String name;

        @DynamoDBTypeConverted(converter = DynamoDBConverter.BigDecimalConverter.class)
        @DynamoDBAttribute(attributeName = "unitPrice")
        private BigDecimal unitPrice;

        @DynamoDBAttribute(attributeName = "quantity")
        private Integer quantity;

        @DynamoDBTypeConverted(converter = FoodMenuIDConverter.class)
        @DynamoDBAttribute(attributeName = "foodMenuId")
        private FoodMenuID foodMenuID;

        @DynamoDBTypeConverted(converter = ItemMenuIDConverter.class)
        @DynamoDBAttribute(attributeName = "itemMenuId")
        private ItemMenuID itemMenuID;

    }

    public static class FoodMenuIDConverter implements DynamoDBTypeConverter<String, FoodMenuID> {

        @Override
        public String convert(FoodMenuID foodMenuID) {
            return foodMenuID.toString();
        }

        @Override
        public FoodMenuID unconvert(String value) {
            return new FoodMenuID(value);
        }
    }

    public static class ItemMenuIDConverter implements DynamoDBTypeConverter<String, ItemMenuID> {
        @Override
        public String convert(ItemMenuID itemMenuID) {
            return itemMenuID.toString();
        }

        @Override
        public ItemMenuID unconvert(String value) {
            return new ItemMenuID(value);
        }
    }

}
